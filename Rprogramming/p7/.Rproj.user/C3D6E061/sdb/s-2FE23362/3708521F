{
    "collab_server" : "",
    "contents" : "##### P7#####\n\n# 1) Crea un nuevo proyecto llamado \"p7\"\n# ir a menú y pulsar File-> new project-> escoger nuevo proyecto vacío.\n# 2) Crea un script y carga las librerías necesarias.\n#Instala previamente los archivos si es necesario.\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(plyr)\n# 3) Crea una función que dado un número calcule su módulo 4 \n#  Aplícalo a tu número de dni.\n\nmod4<-function(n) {\n  mod4<-n%%4\n  }\nmimod<-mod4(3093835)\n\n# 4) Carga el dataset proporcionado \"datos_XXX.csv\" correspondiente a:  \n# A para mod4 igual a 0, B para mod4 igual a 1, \n# C para mod4 igual a 2 y D para mod4 igual a 3.  \ndatos<-read.csv('datos_XXC.csv', \n             encoding = 'UTF-8', \n             sep = ',',\n             dec = '.')\n\n# 5) Echa un vistazo a los datos para familiarizarte con ellos. \n# Escribe directivas para ello. ¿Cuántas variables tiene? \n# ¿Cuántos registros tiene? Visualiza en tipo de las variables y \n# la estructura del dataset.\n#head(datos, 4)  poco recomendable por que es un dataset muy grande\n#tail(datos, 4)\nstr(datos) #129 obs. of  180 variables\n\n# 6)Elimina todas las variables que tengan más de un 80% de NAs. \n# Para ello, debes contar el número de NAs usando código R. \n# Almacena los resultados en \"datos_1\". \n# Guardar el dataset en un archivo csv con el mismo nombre.\ncontarNA<- function(lista) {\n  return(sum(is.na(lista)))\n}\n\n#Esta función calcula el porcentaje de NA:\n\nporcentajeNA<-function(lista) {\n  return(contarNA(lista)/length(lista))\n}\n\nelimina<-c(0) #En este vector se almancenarán los resultados:\ndatos_1<-datos\nfor (i in 1:length(datos)){\n  porcentaje<-porcentajeNA(datos[,i])\n  if (porcentaje>=0.8) elimina[i]=TRUE\n  else elimina [i]=FALSE\n} #Aplicando el filtro que se ha definido se obtiene el dataset deseado.\ndatos_1 <- datos_1[,-elimina==0] \n\nwrite.csv(datos_1, \"datos_1.csv\") \n\n# 7) Crea un nuevo dataset llamado datos_2\" con las primeras 13 variables\n\ndatos_2<-select(datos, fecha:lentitud)\n\n#Después se renombran las variables al inglés para evitar problemas con las tildes y las ñ:\n\n\n\n\n# 8)Renombra en inglés las variables para evitar tildes y otros símbolos.\nnombres<-c(\"Date\",\"Animus\",\"Anxiety\",\"Irritability\",\"Concentration\",\"Tabacco\",\"Caffeine\",\"Sleep\",\"Waking_up\",\"Motivation\",\"Sleep_quality\", \"Slowness\")\nnames(datos_2)<-nombres\nhead(datos_2) #para comprobar\n\n# 9) Utiliza \"ggplot2\"con  boxplot, etc.  para calcular la mediana, los \n# cuartiles y los datos atípicos de 3 variables de tu elección. Comenta \n# en cada caso tus observaciones. Guarda las imágenes en archivos png \n# dentro de tu proyecto.\n\n#ANIMUS---------------------------\nggplot(datos_2, aes(x=Animus))+geom_bar(fill=\"grey\")\nsummary(datos_2$Animus)\n\n#MOTIVATION---------------------------\n\nggplot(data=datos_2, aes(x=Motivation)) + geom_bar(fill=\"pink\")\nsummary(datos_2$Motivation)\n\n#SLEEP--------------------------------\n\nggplot(datos_2, aes(x=Sleep)) + geom_histogram(binwidth = 0.5)\nsummary(datos_2$Sleep)\n\n\n#A continuación se calcula el tiempo dormido por cada individuo:\n\ntotal_sleep<-function(dormir,despertar) {\n  a=dormir*60\n  b=despertar*60\n  if (dormir>despertar) { #Hay cambio de día \n    dormido=(1440-a)+b\n  } else #No hay cambio de día:\n    dormido=b-a\n  return(dormido)\n}\n\n\ndatos_2<-mutate(datos_2, sleep_time=total_sleep(Sleep, Waking_up))\n\nmodelo <- lm(sleep_time ~ Date+Animus  + Anxiety  + Irritability  + Concentration  + Tabacco  + Caffeine  + Sleep  + Waking_up  + Motivation  + Sleep_quality  +  Slowness, data=datos_2 )\nsummary(modelo)\nggplot(datos_2,aes(sleep_time, Waking_up))+\n  geom_smooth(method='lm',formula=y~x) + xlab('Horas de sueño') + ylab('Hora del despertar') + ggtitle('Horas de sueño - Hora del despertar')\n#-----------------------------------------------------------------\nggsave('SleepTime.png')\n\n\n\n\n",
    "created" : 1546419657881.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3921057929",
    "id" : "3708521F",
    "lastKnownWriteTime" : 1546552719,
    "last_content_update" : 1546552719629,
    "path" : "~/p7/codigop7.R",
    "project_path" : "codigop7.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}